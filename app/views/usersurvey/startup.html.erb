<%= stylesheet_link_tag "founder.css" %>

<style>
    .container {
        position: relative;
        display: table;
        border-width: 2px 1px;
        border-style: solid;
        border-color: #555 #CCC;
        background-color: #ffffff;
        padding-bottom: 30px;
        margin-bottom: 20px;
    }

    .span12 {
        width: 940px;
    }

    .span3{
        width: 270px!important;
        float: left;
    }

    [class^="icon-"], [class*=" icon-"] {
        font-family: FontAwesome;
        font-style: normal;
        text-decoration: inherit;
        -webkit-font-smoothing: antialiased;
        display: inline;
        width: auto;
        height: auto;
        line-height: normal;
        vertical-align: baseline;
        background-image: url("/assets/glyphicons-halflings.png");
        background-repeat: repeat;
        margin-top: 0;
    }
        #main{width: 940px!important}

        h1{
            font-size: 30px;
            line-height: 36px;
            padding: 0 0 0 10px!important;
            font-weight: normal;
        }
</style>

<div class="container" style="width: 940px;">

  <div class="row s-op">
    <div class="span12 well-b">


      <div class="row title">
        <div class="span12">
          <div class="box c1">
            <h1 class="op-title">家庭资产体检</h1>
            <div class="toggle-btn pull-right" style="margin: 20px 20px 0 0;"><a tid="f" onclick="toggleButton(this);"><span>关闭</span>&nbsp;&nbsp;<i class="icon-minus" style="font-size: 14px;">&nbsp;&nbsp;</i></a></div>
          </div>
        </div>
      </div>

      <div style="display: block;" class="row tgl-content-f">
        <div class="span12 well-c">

          <div id="founding-inputs" class="row">
            <div class="span3"><h2 style="font-size: 24px;font-weight: normal;">您的资料</h2></div>
            <div class="span3">
              <span class="title">年龄</span><br>
              <span class="control-group">
                <select  name="age" id="age" title="年龄">
                  <option value="0">20~25岁</option>
                  <option value="1">25~30岁</option>
                  <option value="2">30~35岁</option>
                  <option value="3">35~40岁</option>
                  <option value="4">40~45岁</option>
                </select>
              </span>
            </div>
            <div class="span3">
              <span class="title">性别</span><br>
              <select  name="sex" id="sex" title="性别">
                <option value="男">男</option>
                <option value="女">女</option>
              </select>
            </div>
          </div>

          <div class="row op-label">
            <div class="span3">资产品种</div>
            <div class="span3" style="text-align: left;">资产金额</div>
            <div class="span2" style="text-align: left;">产品名称（可选）</div>
            <div class="span1"></div>
          </div>

          <div class="seperator thick"></div>

          <div class="founder-inputs">

            <div class="op-input first" fid="founder">
              <div class="seperator bottom"></div>

              <div class="row">
                <div class="span3 control-group">
                  <select  name="variety" id="variety" class="founder-name" title="资产品种">
                    <option value="银行活期">银行活期</option>
                    <option value="现金">现金</option>
                    <option value="银行理财产品">银行理财产品</option>
                    <option value="银行定期">银行定期</option>
                    <option value="基金">基金</option>
                    <option value="股票">股票</option>
                    <option value="其它">其它</option>
                  </select>
                </div>
                <div class="span3 control-group" style="text-align: left;">
                  <div class="input-prepend">
                    <span class="add-on">￥</span>
                    <input class="span2 init-share" id="amount" style="width: 180px;" value="200000" type="text" placeholder="资产金额">
                  </div>
                </div>
                <div class="span2" style="text-align: center;">
                  <select  name="pname" id="pname" class="diluted-dist" title="产品名称">
                    <option value="-">-</option>
                    <option value="理财产品">理财产品</option>
                  </select>
                </div>
                <div class="span1 top5" style="margin-top: 10px;margin-left: 70px\9;height: 20px;overflow: hidden;"><i class="icon-remove-sign" style="display: none;margin-left: 20px;" onclick="removeFounder(this);">&nbsp;&nbsp;</i></div>
              </div>
            </div>

          </div>

          <div class="seperator bottom thick"></div>

          <a data-original-title="Click here to add another company founder" class="xtip pull-right"style="padding: 0 20px 10px 0;" onclick="addFounder(null, false);"><b>+ 添加资产</b></a>

        </div>
      </div>
    </div>
    <div style="text-align: center;">
      <a onclick="run()" class="btn btn-primary" style="margin-top: 20px;">立即体检</a>
    </div>
  </div>

</div>
<script>
   function run(){
       var array=[[0.1,0.3,0.6],[0.1,0.35,0.55],[0.15,0.35,0.5],[0.15,0.4,0.45],[0.2,0.4,0.4]]
       var variety=document.getElementsByClassName("founder-name")  //资产品种
       var amount=document.getElementsByClassName("init-share")  //资产金额
       var xianjin;
       var wenjian;
       var fenxian;
       // alert($("#age").attr("value"));  年龄层次
      for(i=0;i<variety.length;i++){
          alert(variety[i].value)
          alert(amount[i].value)
      }
   }

    var eCalcShareHolders = new Object();
    var settingSavedUser = false;
    var debug = false;
    var econValidations;

    // use to add founders
    function addFounder(founder, isFirst)
    {
        var aaa = genId(eCalcShareHolders);
        var f = founder;
        if(f == null) // create a new share holder
        {
            f = new ShareHolder();
            f.setupShareHolder(true, false, false);
            f.id= "founder-" + aaa;
            f.name = "Founder " + getNewNameNumber(eCalcShareHolders, "founder");
            eCalcShareHolders[f.id] = f;
        }

        if(!isFirst)
        {
            var fi = $("div.founder-inputs div.op-input").last().clone().removeClass("first");
            $(fi).find(".icon-remove-sign").show();
            var fid = f.id;
            $(fi).attr("fid", fid);
            // put values in
            $(fi).find(".founder-name").val(f.name).blur(fNameChange);
            $(fi).find(".founder-name").attr("id",'variety'+aaa);
            $(fi).find(".init-share").val(f.percentStake).keyup(initShareChange);
            $(fi).find(".init-share").attr("id",'amount'+aaa);
            $(fi).find(".diluted-dist").attr("id",'pname'+aaa);
            $("div.founder-inputs").append(fi);
        }
        else
        {
            $("div.founder-inputs div.op-input.first .founder-name").val(f.name).blur(fNameChange);
            $("div.founder-inputs div.op-input.first .init-share").val(f.percentStake).keyup(initShareChange);
            $("div.founder-inputs div.op-input.first .diluted-dist").html("0");
            $("div.founder-inputs div.op-input.first").attr("fid", f.id);
        }

    }


    // change in a founder name
    function fNameChange(e)
    {
        var fid = $(e.target).closest("div.op-input").attr("fid");
        // update the share holder
        eCalcShareHolders[fid].name = $(e.target).val();
    }

    // use to handle init share change
    function initShareChange(e)
    {
        var fid = $(e.target).closest("div.op-input").attr("fid");
        // update the share holder
        eCalcShareHolders[fid].percentStake = getFloat($(e.target).val());
    }


    // use to remove founders
    function removeFounder(e)
    {
        var fi = $(e).closest("div.op-input");
        var fid = $(fi).attr("fid");
        delete eCalcShareHolders[fid];
        $(fi).detach();
        cslog("Removing share holder");
        cslog(eCalcShareHolders);
    }

    function cslog(message)
    {
        if(debug == true)
        {
            console.log(message);
        }
    }


    function toggleButton(e)
    {
        var text = $(e).find("span").html();
        if(text == "关闭")
        {
            $(".tgl-content-"+$(e).attr("tid")).slideUp();
            $(e).find("span").html("打开");
            $(e).find("i").removeClass().addClass("icon-plus");

        }
        else
        {
            $(".tgl-content-"+$(e).attr("tid")).slideDown();
            $(e).find("span").html("关闭");
            $(e).find("i").removeClass().addClass("icon-minus");
        }
    }
</script>

<script>
    var ShareHolder = function()
    {
        this.isFounder = true;
        this.isEmployee = false;
        this.isSeries = false;
        this.percentStake = 0;
        this.exitValue = 0;
        this.totalShares = 0;
        this.name = "name";
        this.id = null;

        this.setFounder = function()
        {
            this.isFounder = true;
            this.isEmployee = false;
            this.isSeries = false;
        }

        this.setSeries = function()
        {
            this.isFounder = false;
            this.isEmployee = false;
            this.isSeries = true;
        }

        this.setEmployee = function()
        {
            this.isFounder = false;
            this.isEmployee = true;
            this.isSeries = false;
        }

        this.setupShareHolder = function(isFounder, isEmployee, isSeries)
        {
            if(isFounder)
            {
                this.isFounder = true;
                this.isEmployee = false;
                this.isSeries = false;
            }
            else if(isEmployee)
            {
                this.isFounder = false;
                this.isEmployee = true;
                this.isSeries = false;
            }
            else if(isSeries)
            {
                this.isFounder = false;
                this.isEmployee = false;
                this.isSeries = true;
            }
        }

        // Use to create a JSON object from the Founder
        this.renderJson = function()
        {
            return {
                isFounder: this.isFounder, isEmployee: this.isEmployee,
                isSeries: this.isSeries, percentStake: this.percentStake,
                totalShares: this.totalShares, id: this.id, name:this.name
            };
        }
    }

    function genId(map)
    {
        //cslog("Generating id for object.");
        var tId = 0;
        for(var id in map)
        {
            var count = id.split("-")[1];
            if(getInteger(count) > tId)
            {
                tId = count;
            }
        }
        return getInteger(tId) + 1;
    }

    function getInteger(v)
    {
        if (v != null && typeof(v) == 'string' & v != "")
        {
            v = v.replace(/\$/, "");
            v = v.replace(/,/g, "");
            v = v.replace(/\..*/g, "");
            var r = parseInt(v, 10);
            if (!isNaN(r))
                return r;
        }
        if (typeof(v) == "number")
        {
            return parseInt(v, 10);
        }

        return 0;
    }

    function getNewNameNumber(shareHolders, type)
    {
        var fRegex = /founder\s\d/i;
        if(type == "employee")
        {
            fRegex = /employee\s\d/i;
        }
        var latestId = 1;
        for(var id in shareHolders)
        {
            if(type != "employee" && shareHolders[id].isFounder && fRegex.test(shareHolders[id].name))
            {
                var curNum = getInteger(fRegex.exec(shareHolders[id].name)[0].split(" ")[1]);
                if(curNum >= latestId)
                {
                    latestId  = curNum + 1;
                }
            }
            else if(type == "employee" && shareHolders[id].isEmployee && fRegex.test(shareHolders[id].name))
            {
                var curNum = getInteger(fRegex.exec(shareHolders[id].name)[0].split(" ")[1]);
                if(curNum >= latestId)
                {
                    latestId  = curNum + 1;
                }
            }
        }
        return latestId;
    }
</script>