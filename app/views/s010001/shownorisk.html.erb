<%= javascript_include_tag "Hashtable.js" %>
<!--
<style type="text/css">
    tr.even {background-color: #E2E4FF;}
    tr.even td.sorting_1 {background-color: #D3D6FF;}
</style>
-->
    <div class="ironbars">
  <div id = "norisktitle"><br><h3>策略实时运行中</h3></div>
<!--  <div id = "noriskluntan"><a href="#remarks">我想提点意见</a></div> -->
      </div> <%= @trynotice  %>
<div id=checkbox>
      <label class="label_check" for="checkbox-01"><input name="sample-checkbox-01" id="checkbox-01" value="1" type="checkbox" checked="true" onclick="mychecked_1(this)" />主力套利对</label>
      <label class="label_check" for="checkbox-02"><input name="sample-checkbox-02" id="checkbox-02" value="2" type="checkbox" onclick="mychecked_2(this)"/>逐月套利对</label>
</div>
<script type="text/javascript">
    //$(document).ready(function(){
    //  notyAlertWithButtons('bottomLeft', 'noty_theme_facebook');
   // });
    function notyAlertWithButtons(layout, theme){
      noty({layout : layout, theme : theme, type : 'notification', text: '您还没有登录！',
        buttons: [
          {type: 'btn btn-primary', text: '登录', click: function($noty) {
              $noty.close();
              window.location.href='../sessions/new';
            }
          },
          {type: 'btn btn-danger', text: '取消', click: function($noty) {
              $noty.close();
              noty({force: true, layout : layout, theme : theme, text: '您还是注册一下吧！', type: 'error'});
            }
          }
        ], closable: false, timeout: 3000
      });
    }
    function notyAlertWithButtons_0(layout, theme){
      noty({layout : layout, theme : theme, type : 'notification', text: '您还不是收费用户！',
        buttons: [
          {type: 'btn btn-primary', text: '确定', click: function($noty) {
              $noty.close();
              noty({force: true, layout : layout, theme : theme, text: '找管理员！', type: 'error'});
            }
          },
          {type: 'btn btn-danger', text: '取消', click: function($noty) {
              $noty.close();
              noty({force: true, layout : layout, theme : theme, text: '取消！', type: 'error'});
            }
          }
        ], closable: false, timeout: 3000
      });
    }
    var mychecked_f=1;
    var mychecked_s;
    function mychecked_1(para){
        if(para.checked){
            mychecked_f=1
        }
        else{
            mychecked_f=0;
        }
    }
    function mychecked_2(para){
        <% if @webuser==nil%>
        notyAlertWithButtons('bottomLeft', 'noty_theme_facebook');
        para.checked=null;
        <% elsif @webuser.level==0%>
        notyAlertWithButtons_0('bottomLeft', 'noty_theme_facebook');
        para.checked=null;
            <% else %>
        if(para.checked){
            mychecked_s=1
        }
        else{
            mychecked_s=0
        }
        <%end%>
    }
    function setupLabel() {
        if ($('.label_check input').length) {
            $('.label_check').each(function(){
                $(this).removeClass('c_on');
            });
            $('.label_check input:checked').each(function(){
                $(this).parent('label').addClass('c_on');
            });
        };
        if ($('.label_radio input').length) {
            $('.label_radio').each(function(){
                $(this).removeClass('r_on');
            });
            $('.label_radio input:checked').each(function(){
                $(this).parent('label').addClass('r_on');
            });
        };
    };
    $(document).ready(function(){
        $('body').addClass('has-js');
        $('.label_check, .label_radio').click(function(){
            setupLabel();
        });
        setupLabel();
    });
</script>
<!-- default table -->
<div id ="rtpricetable"></div> <br>
<!-- strategytro -->
<h3>策略介绍</h3>
<table>
  <tr>
    <td>instruments</td><td><%= @strategy_norisk.strategytype  %></td>
  </tr>
  <tr>
    <td>策略类型</td><td><%= @strategy_norisk.strategyattr  %></td>
  </tr>
  <tr>
    <td>系统开始时间</td><td><%= @strategy_norisk.startdate  %></td>
  </tr>
  <tr>
    <td>系统开发者</td><td><%= @strategy_norisk.developer  %></td>
  </tr>
</table>

<script type="text/javascript">
    jQuery.fn.dataTableExt.oSort['formatted-num-asc'] = function(a,b) {
    /* Remove any formatting */
        var x = a.match(/\d/) ? a.replace( /[^\d\-\.]/g, "" ) : 0;
        var y = b.match(/\d/) ? b.replace( /[^\d\-\.]/g, "" ) : 0;
        /* Parse and return */
        return parseFloat(x) - parseFloat(y);
    };
    jQuery.fn.dataTableExt.oSort['formatted-num-desc'] = function(a,b) {
        var x = a.match(/\d/) ? a.replace( /[^\d\-\.]/g, "" ) : 0;
        var y = b.match(/\d/) ? b.replace( /[^\d\-\.]/g, "" ) : 0;
        return parseFloat(y) - parseFloat(x);
    };
    $(function(){
        $("#datatables").dataTable({
            "aaSorting": [[4,"desc"]],
            "aoColumns": [
                { "sTitle": "套利对名称", "sClass": "center" },
                { "sTitle": "近月合约价格", "sClass": "center" },
                { "sTitle": "近月合约价格", "sClass": "center" },
                { "sTitle": "成本", "sClass": "center" },
                { "sTitle": "年化收益率",  "sType": "formatted-num","sClass": "center" },
                { "sTitle": "历史时间", "sClass": "center" }
        ]
        });
    });
</script>
<br />
<h2> 历史最佳套利机会 </h2>
<table cellpadding="0" cellspacing="0" border="0" class="display" id="datatables">
	  <tbody>
        <% @allmaxreturnrate.each do |maxreturnrate|
           if ((maxreturnrate.firstprice>0)&&(maxreturnrate.secondprice>0)) then%>
              <tr>
                <td class="center"><%= maxreturnrate.pairname %></td>
                <td class="center"><%= maxreturnrate.firstprice %></td>
                <td class="center"><%= maxreturnrate.secondprice %></td>
                <td class="center"><%= maxreturnrate.cost %></td>
                <td class="center" type="formatted-num"><%= format("%.1f",maxreturnrate.returnrate*100) %>%</td>
                <td class="center"><%= maxreturnrate.currenttime.strftime("%Y年%m月%d日 %H时%M分%S秒") %></td>
              </tr>
            <% end %>
        <% end %>
	   </tbody>
      <tfoot>
	  <tr>
        <th>套利对名称</th>
        <th>近期合约价格</th>
        <th>远期合约价格</th>
        <th>成本</th>
        <th>年化收益率</th>
        <th>历史时间</th>
      </tr>
	  </tfoot>
</table>
<br>
<div class="ironbars">
     <h3>无风险策略介绍</h3>
 </div>

<p>无风险套利属于跨期套利的一种，而跨期套利是指在同一种商品不同交割月份合约之间的价差出现异常变化时，在同一期货商品的不同合约月份建立数量相等、方向相反的持仓如何把握主力持仓量，并以对冲或交割方式结束交易的一种操作方式。其中参与实际仓单交割的套利就是无风险套利，因为建立在严格的持仓成本和持仓条件基础上，一般不会受市场行情波动的影响。当然，满足这样条件的“无风险”同时又有稳健收益的套利机会并不多见，一旦发生，往往会吸引资金积极参与。 </p>
<p>无风险套利模型归纳为：当实际价差>套利成本时，跨期利润=实际价差-套利成本。当利润达到一定程度的时候，进行获利平仓。当两合约价差逆向走高时，到期可进行交割，获取稳定套利利润，达到无风险套利目的。当然，无风险套利的机会不可能经常出现，但一旦出现，将是一种最稳健的获取收益的方法。</p>


<!-- noriskmessage -->
<br>
 <div class ="remarkslist">
<h3>提点意见吧?</h3>
 </div>
 <div class = "newremark">
 <iframe src="../noriskmessages/new" frameborder="0" scrolling="no" height="250" width="800" marginheight="0" marginwidth="0"></iframe>
 </div>
 <div class ="remarkslist">
   <h3>所有评论</h3>
<iframe name="iframe_index" src="../noriskmessages" width="800" scrolling="no" height="700" marginheight="10" marginwidth="0" style="border:none"></iframe>
 </div>
<!-- JavaScript -->
<script type="text/javascript">
    //table data storage (2D array)
    var tabledata= new Array([0,0,0,0,0,0,0]);
    tabledata=[];
    var tabledata_f= new Array([0,0,0,0,0,0,0]);
    tabledata_f=[];
    //xml array
    var xml_arr=new Array();
    var rtxml_arr=new Array();
    //define
    var computearbfee = new Array();
    var computetransfee = new Array();
    var computerateofreturn = new Array();
    var funds = new Array();
    var delivermarginfee = new Array();
    var trademarginfee = new Array();
    var storagefee = new Array();
    var deliverfee = new Array();
    var vatfee = new Array();
    //hash table
    var hash_db = new Hashtable();
    <% for i in 0..@dbnum-1 do%>
        hash_db.add('<%= @db[i].commodityid%>',[<%= @db[i].lendrate%>,<%= @db[i].tradecharge%>,<%= @db[i].trademargingap%>],<%= @db[i].tradechargetype%>);
    <% end%>
    var hash_table = new Hashtable();
	function MKDataState(mtcounter, isgetMKData){ 
	  this.mtcounter = mtcounter; 
	  this.isgetMKData = isgetMKData; 
	}	 
    //formatted-num
    jQuery.fn.dataTableExt.oSort['formatted-num-asc'] = function(a,b) {
    /* Remove any formatting */
        var x = a.match(/\d/) ? a.replace( /[^\d\-\.]/g, "" ) : 0;
        var y = b.match(/\d/) ? b.replace( /[^\d\-\.]/g, "" ) : 0;
        /* Parse and return */
        return parseFloat(x) - parseFloat(y);
    };
    jQuery.fn.dataTableExt.oSort['formatted-num-desc'] = function(a,b) {
        var x = a.match(/\d/) ? a.replace( /[^\d\-\.]/g, "" ) : 0;
        var y = b.match(/\d/) ? b.replace( /[^\d\-\.]/g, "" ) : 0;
        return parseFloat(y) - parseFloat(x);
    };
    $.ajaxSetup({
        cache: false,
        timeout:10000
    });
    function getxml(){
        $.get(document.location.href.substring(0,document.location.href.indexOf(window.document.location.pathname))+"/assets/CSpreadCostPairs.xml",function(data){
                    xml_arr=xml2array(data);
                    var elements=data.getElementsByTagName("pair");
                    for (var i = 0; i < elements.length; i++) {
                        hash_table.add(xml_arr['pairsattr']['pair'][i]['name'],[hash_db.items(xml_arr['pairsattr']['pair'][i]['name'].match(/([a-zA-Z]+)/g)[0])[0],hash_db.items(xml_arr['pairsattr']['pair'][i]['name'].match(/([a-zA-Z]+)/g)[0])[1],hash_db.items(xml_arr['pairsattr']['pair'][i]['name'].match(/([a-zA-Z]+)/g)[0])[2],
                            parseFloat(xml_arr['pairsattr']['pair'][i]['tradeunit']),parseFloat(xml_arr['pairsattr']['pair'][i]['vatrate']),parseFloat(xml_arr['pairsattr']['pair'][i]['deliverchargebyhand']),
                            parseFloat(xml_arr['pairsattr']['pair'][i]['storagedailyfee']),parseFloat(xml_arr['pairsattr']['pair'][i]['D2']),parseFloat(xml_arr['pairsattr']['pair'][i]['D1']),
                            parseFloat(xml_arr['pairsattr']['pair'][i]['firstmarginrate']),parseFloat(xml_arr['pairsattr']['pair'][i]['secondmarginrate']),parseFloat(xml_arr['pairsattr']['pair'][i]['issinglemargin']),
                            parseFloat(xml_arr['pairsattr']['pair'][i]['productid'].substr(7,1)),hash_db.items(xml_arr['pairsattr']['pair'][i]['name'].match(/([a-zA-Z]+)/g)[0])[3]
                        ]);
                    }
                        getAjax();
        });
    }
    var ajax_watchdog=0;
     function getAjax(){
         $.get(document.location.href.substring(0,document.location.href.indexOf(window.document.location.pathname))+"/assets/CSpreadCostStrRunOnTime.xml",function(data){
                     rtxml_arr=xml2array(data);
                     var elements=data.getElementsByTagName("pair");
						 if(elements.length!=0){
							 for (var i = 0; i < elements.length; i++) {
                             vatfee[i]=(parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])-parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice']))*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[3]
                                     *hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[4]/(1+hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[4]);
                                             //交割费用
                             deliverfee[i]=hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[5]*2;
                                             //存储费用
                             storagefee[i]=hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[6]*(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[7]-hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[8])
                                             //交易费用
                                 if(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[13]==1){
                                 computetransfee[i]=parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[3]*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[1]*2;
                                 }
                                 else
                             computetransfee[i]=hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[1]*2;
                                             //总资金
                             funds[i]=(parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])+(parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])*(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[10]+hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[2])))*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[3];
                                             //交易保证金占用成本
                             if(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[11]==1)
                                 trademarginfee[i]=parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[3]*(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[9]+hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[2])*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[0]*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[8]/365
                                         +parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[3]*(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[9]+hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[2])*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[0]*(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[7]-hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[8])/365;
                                 else
                                 trademarginfee[i]=(parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[3]*(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[9]+hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[2])+parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])
                                         *hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[3]*(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[10]+hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[2]))*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[0]*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[8]/365
                                         +parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[3]*(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[10]+hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[2])*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[0]*(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[7]-hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[8])/365;
                                             //默认交割保证金占用成本
                             delivermarginfee[i]=parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[3]*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[0]*(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[7]-hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[8])/365;
                         computearbfee[i] = storagefee[i]+deliverfee[i]+trademarginfee[i]+delivermarginfee[i]+vatfee[i]+computetransfee[i];
                                 //年化收益率计算
                         computerateofreturn[i]=((parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])-parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice']))
                                 *hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[3]-computearbfee[i])*365/(funds[i]*hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[7])
                         if(parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])&&parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])>0){
                             if(mychecked_f==1){
                                 if(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[12]==2)
                                     tabledata[i]=[rtxml_arr['pairstrade']['pair'][i]['name'],rtxml_arr['pairstrade']['pair'][i]['firstprice'],rtxml_arr['pairstrade']['pair'][i]['secondprice'],
                                 (parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])-parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])),
                                         parseFloat(computearbfee[i]).toFixed(1),(computerateofreturn[i]*100).toFixed(1), rtxml_arr['pairstrade']['pair'][i]['time']];
                             }
                             if(mychecked_f==0){
                                 if(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[12]==2)
                                     tabledata[i]=[0,0,0,0,0,0,0];
                             }
                             if(mychecked_s==1){
                                 if(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[12]==1)
                                     tabledata[i]=[rtxml_arr['pairstrade']['pair'][i]['name'],rtxml_arr['pairstrade']['pair'][i]['firstprice'],rtxml_arr['pairstrade']['pair'][i]['secondprice'],
                                         (parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])-parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])),
                                         parseFloat(computearbfee[i]).toFixed(1),(computerateofreturn[i]*100).toFixed(1), rtxml_arr['pairstrade']['pair'][i]['time']];
                             }
                             if(mychecked_s==0){
                                 if(hash_table.items(rtxml_arr['pairstrade']['pair'][i]['name'])[12]==1)
                                     tabledata[i]=[0,0,0,0,0,0,0];
                             }
                         }
                         else
                                     tabledata[i]=[rtxml_arr['pairstrade']['pair'][i]['name'],"--","--","--","--","--","--"];
							}
                             for(var k=0,s=0;k<tabledata.length;k++){
                                 if(tabledata[k]!=null&&tabledata[k][0]!=0){
                                     tabledata_f[s]=tabledata[k];
                                     s=s+1;
                                 }
                             }
                                 $('#rtpricetable').html('<table cellpadding="0" cellspacing="0" border="0" class="display" id="default"></table>');
                                 $('#default').dataTable( {
                                 "aaData": tabledata_f,"aaSorting": [[5,"desc"]],"bPaginate": false,
                                        "aoColumns": [
                                     { "sTitle": "套利合约对名", "sClass": "center" },{ "sTitle": "近月合约价格", "sClass": "center" },
                                     { "sTitle": "远月合约价格", "sClass": "center" },{ "sTitle": "最新价差", "sClass": "center" },
                                             { "sTitle": "持仓成本", "sClass": "center" },
                                     { "sTitle": "年化收益率", "sType": "formatted-num","sClass": "center","fnRender":function(obj){
                                                         var sReturn = obj.aData[ obj.iDataColumn ];
                                          if ( sReturn >=0 )sReturn = "<font color='red'>"+sReturn+"%</font>";
                                          else sReturn = "<font color='green'>"+sReturn+"%</font>";
                                          return sReturn;}
                                             },
                                             { "sTitle": "更新时间", "sClass": "center" }
                                         ] ,
                                 "bFilter": false//, "bStateSave": true
                                     } );
                             tabledata=[];
                             tabledata_f=[];
						};
                     setTimeout(refreshMKData,2000);
             ajax_watchdog=1;

         } )
						}
     function ajax_restart(){
         if(ajax_watchdog==0){
             refreshMKData();
         }
         setTimeout(listen_ajax_watchdog,10000);
     }
    //setInterval(justalert,3000);
    //function justalert(){alert(ajax_watchdog)}
    function listen_ajax_watchdog(){
        if(ajax_watchdog==1){
            setTimeout(listen_ajax_watchdog,10000) ;
        }
        if(ajax_watchdog==0){
           setTimeout(ajax_restart,10000);
        }
						}
	function refreshMKData(){
		if (g_MKDataState.isgetMKData){
            ajax_watchdog=0;
		   getAjax();
		}	 	
		}	 	
	function checktimeMKTime(){
        $.getJSON("shownorisk",{gettime:"gettime"},
          function (data,status){
              var str=data.substr(0,10)+" "+data.substr(11,8);
		var servertime=new Date(str.replace(/-/g, "\/"));
		var endtime=new Date(servertime);
		if ((servertime.getDay()!=0)&&(servertime.getDay()!=6))
		{
		    if(servertime.getHours()<9){
				endtime.setHours(9);
				endtime.setMinutes(0);
				endtime.setSeconds(30);
                g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
                g_MKDataState.isgetMKData=false;
                setTimeout(checktimeMKTime,g_MKDataState.mtcounter);			
			}
			else if((servertime.getHours()<15)&&(servertime.getHours()>=9)){
				endtime.setHours(15);
				endtime.setMinutes(2);
				endtime.setSeconds(0);
                g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
                g_MKDataState.isgetMKData=true;
                setTimeout(checktimeMKTime,g_MKDataState.mtcounter);	
			}else{
				endtime.setDate(servertime.getDate()+1); 
				endtime.setHours(9);
				endtime.setMinutes(0);
				endtime.setSeconds(30);
                g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
                g_MKDataState.isgetMKData=false;
                setTimeout(checktimeMKTime,g_MKDataState.mtcounter);				
			}
		}else{
			endtime.setDate(servertime.getDate()+1); 
			endtime.setHours(9);
			endtime.setMinutes(0);
			endtime.setSeconds(30);
			g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
			g_MKDataState.isgetMKData=false;
			setTimeout(checktimeMKTime,g_MKDataState.mtcounter);			
		}		
        getxml();
	})
	}
	var g_MKDataState=new MKDataState(3600000,true);
    var stream_flag=0;
	checktimeMKTime();
    setTimeout(listen_ajax_watchdog,10000) ;
    setInterval(checkStat,10000);
    function checkStat(){
        $.ajax({
            url:"shownorisk",
            success:function()
            {
                if(stream_flag==1){
	checktimeMKTime();
                    stream_flag=0;
                }
                //alert("request success!");
            },
            error:function()
            {
                stream_flag=1;
               // alert("request error!");
            }
        });
    }
</script>
