<%= javascript_include_tag :defaults %>
<%= javascript_include_tag "prototype.js" %>

<!-- <META HTTP-EQUIV="Refresh" content="10"> -->
<script language="Javascript">
     function loadXML(xmlString){
         var xmlDoc=null;
         if(!window.DOMParser && window.ActiveXObject){
             var xmlDomVersions = ['MSXML.2.DOMDocument.6.0','MSXML.2.DOMDocument.3.0','Microsoft.XMLDOM'];
             for(var i=0;i<xmlDomVersions.length;i++){
                 try{
                     xmlDoc = new ActiveXObject(xmlDomVersions[i]);
                     xmlDoc.async = false;
                     xmlDoc.loadXML(xmlString);
                     break;
                 }catch(e){
                 }
             }
         }
         else if(window.DOMParser && document.implementation && document.implementation.createDocument){
             try{
                 domParser = new  DOMParser();
                 xmlDoc = domParser.parseFromString(xmlString, 'text/xml');
             }catch(e){
             }
         }
         else{
             return null;
         }
         return xmlDoc;
     }


    function createxmlhttp()
     {
          xmlhttpobj = false;
          try{
			  xmlhttpobj=new ActiveXObject();
          }catch(e){
              try{
                  xmlhttpobj=new ActiveXObject("MSXML2.XMLHTTP");
              }catch(e2){
                  try{
                      xmlhttpobj=new ActiveXObject("Microsoft.XMLHTTP");
                      }catch(e3){
                      xmlhttpobj = false;
                  }
              }
          }
		  if((!xmlhttpobj)&&(window.XMLHttpRequest))
		  {
			 xmlhttpobj=new XMLHttpRequest();
		  }
		  
          return xmlhttpobj;
     }

	function sortby(first, second){
	    if(first.value>second.value){
		   return -1;
		}else{
		   return 1;
		}
	 }
	function returnrate(id, value){ 
	  this.id = id; 
	  this.value = value; 
	}
	function MKDataState(mtcounter, isgetMKData){ 
	  this.mtcounter = mtcounter; 
	  this.isgetMKData = isgetMKData; 
	}	 
	 
     function getAjax()
     {
         var xmlhttpobj = createxmlhttp();
         if(xmlhttpobj){
             url = document.location.href.substring(0,document.location.href.indexOf(window.document.location.pathname))+"/assets/CSpreadCostStrRunOnTime.xml";
			 xmlhttpobj.open("get",url,true);
			 xmlhttpobj.setRequestHeader("Cache-Control","no-cache");
			 xmlhttpobj.setRequestHeader("If-Modified-Since","0");
			 xmlhttpobj.setRequestHeader("Content-Type","application/x-www-form-urlencoded;charset=utf-8");  
             xmlhttpobj.send(null);			 
             xmlhttpobj.onreadystatechange=function(){
                 if(xmlhttpobj.readyState==4){
                     if(xmlhttpobj.status==200){
                         var htmlxxx = xmlhttpobj.responseText;
                         var xmldoc=loadXML(htmlxxx);
						 var elements = xmldoc.getElementsByTagName("pair");
						 if(elements.length!=0){
							 var tbs = '<table class="rttableformat">';
							 var tbttl = '<tr><th>合约号</th><th>近月合约价格</th><th>远月合约价格</th><th>最新价差</th><th>持仓成本</th><th>年化收益率</th><th>更新时间</th></tr>';
                             tbs += tbttl;
							 var tbstrarray = new Array();		
							 var returnratearray = new Array();
							 for (var i = 0; i < elements.length; i++) {
								tbstrarray[i]="<tr>";
								tbstrarray[i]+= "<td>"
									 + elements[i].getElementsByTagName("name")[0].firstChild.nodeValue + "</td>";
								if((elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue>0)
									&&(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue>0)){
									 tbstrarray[i]+= "<td>"
										 + elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue + "</td>";
									 tbstrarray[i]+= "<td>"
										 + elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue + "</td>";
									 tbstrarray[i]+= "<td>"
										 + elements[i].getElementsByTagName("diffprice")[0].firstChild.nodeValue + "</td>";
									 tbstrarray[i]+= "<td>"
										 + parseFloat(elements[i].getElementsByTagName("computearbfee")[0].firstChild.nodeValue).toFixed(1) + "</td>";
									 tbstrarray[i]+= "<td>"
										 + (elements[i].getElementsByTagName("computerateofreturn")[0].firstChild.nodeValue*100).toFixed(1) + "% </td>";
								     returnratearray[i]=new returnrate(i,parseFloat(elements[i].getElementsByTagName("computerateofreturn")[0].firstChild.nodeValue));
								}
								else{
									 tbstrarray[i]+= "<td> -- </td>";
									 tbstrarray[i]+= "<td> -- </td>";
									 tbstrarray[i]+= "<td> -- </td>";
									 tbstrarray[i]+= "<td> -- </td>";
									 tbstrarray[i]+= "<td> -- </td>";
									 returnratearray[i]=new returnrate(i,-10000);										 
								}
								 tbstrarray[i]+= "<td>"
									 + elements[i].getElementsByTagName("time")[0].firstChild.nodeValue + "</td>";
								 tbstrarray[i]+= "</tr>";
							}
							returnratearray.sort(sortby);
							for (var i = 0; i < elements.length; i++){
							    tbs+=tbstrarray[returnratearray[i].id];
							}
							tbs+='</table>\n';
							document.getElementById("rtpricetable").innerHTML=tbs;
						}
                     }
                 }
             }
         }
     }
	
	function refreshMKData()
	{
		if (g_MKDataState.isgetMKData)
		{
		   getAjax();
		}	 	
	}
	
	function getservertime(){
	    var xmlhttpobj = createxmlhttp();
		xmlhttpobj.open("HEAD",location.href,false);  
        xmlhttpobj.send(null);		
        var st=new Date(xmlhttpobj.getResponseHeader("Date")); 			
		return st;   
		
	}
	
	
	function checktimeMKTime(){
		var servertime=getservertime();
		var endtime=new Date(servertime);
		if ((servertime.getDay()!=0)&&(servertime.getDay()!=6))
		{
		    if(servertime.getHours()<9){
				endtime.setHours(9);
				endtime.setMinutes(0);
				endtime.setSeconds(5);
                g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
                g_MKDataState.isgetMKData=false;
                setTimeout(checktimeMKTime,g_MKDataState.mtcounter);			
			}
			else if((servertime.getHours()<15)&&(servertime.getHours()>=9)){
				endtime.setHours(15);
				endtime.setMinutes(2);
				endtime.setSeconds(0);
                g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
                g_MKDataState.isgetMKData=true;
                setTimeout(checktimeMKTime,g_MKDataState.mtcounter);	
			}else{
				endtime.setDate(servertime.getDate()+1); 
				endtime.setHours(9);
				endtime.setMinutes(0);
				endtime.setSeconds(5);	
                g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
                g_MKDataState.isgetMKData=false;
                setTimeout(checktimeMKTime,g_MKDataState.mtcounter);				
			}
		}else{
			endtime.setDate(servertime.getDate()+1); 
			endtime.setHours(9);
			endtime.setMinutes(0);
			endtime.setSeconds(5);	
			g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
			g_MKDataState.isgetMKData=false;
			setTimeout(checktimeMKTime,g_MKDataState.mtcounter);			
		}		
	}

	var g_MKDataState=new MKDataState(3600000,true);
	checktimeMKTime();
    var g_period = new PeriodicalExecuter(refreshMKData,2.0);
	getAjax();
</script>

<div class="slider2">
<div class="slice12">
  <h2>策略性能</h2>
</div>
</div>
<div class="clr"></div>
<div class="body">
  <div class="body_resize">
  <div class="StrategyNews">
  <h2>策略分类</h2>
  <ul>
    <li><%= link_to "无风险套利",:controller =>"strategy",:action =>"show",:id =>"1" %></li>
  </ul>
<p></p>
  </div>

<div class="frame">


<% if(params[:id]=="1") %>
     <div class="ironbars">
        <div class= irontxt>
        <p> <%= @strategyweb.name %></p>
        </div>

      </div>

	<div id="rtpricetable">
	</div>
<% end %>


</div>

<div class="clr"></div>
  </div>
<div class="clr"></div>
</div>
