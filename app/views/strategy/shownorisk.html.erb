<style type="text/css">
    tr.even {
    	background-color: #E2E4FF;
    }
    tr.even td.sorting_1 {
    	background-color: #D3D6FF;
    }
</style>
<!-- default table -->
    <div class="ironbars">
  <div id = "norisktitle"><br><h3>策略实时运行中</h3></div>
  <div id = "noriskluntan"><a href="#remarks">我想提点意见</a></div>
      </div>
<div id ="rtpricetable"></div>
<!-- noriskmessage -->
<br>
<div class ="remarkstitle">
 <a name="remarks">提点意见吧?</a>
 </div>
 <div class = "newremark">
 <iframe src="../noriskmessages/new" frameborder="0" scrolling="no" height="170" width="800" marginheight="0" marginwidth="0"></iframe>
 </div>
 <div class ="remarkslist">
   <h3>所有评论</h3>
<iframe name="iframe_index" src="../noriskmessages" width="800" scrolling="no" height="700" marginheight="10" marginwidth="0" style="border:none"></iframe>
 </div>
<!-- JavaScript -->
<script type="text/javascript">
    //table data storage (2D array)
    var tabledata= new Array([0,0,0,0,0,0,0]);
    //xml array
    var xml_arr=new Array();
    var rtxml_arr=new Array();
    //交易费用修改
    var computearbfee = new Array();
    var computetransfee = new Array();
    //userchange
    function userchange_f(commodityid,tradecharge)
    {
        this.commodityid=commodityid;
        this.tradecharge=tradecharge;
    }
    var userchange=new Array();
    //实际年化收益率
    var computerateofreturn = new Array();
    //总资金
    var funds = new Array();
    //交割保证金占用成本 delivermarginfee
    var delivermarginfee = new Array();
    //交易保证金占用成本 trademarginfee
    var trademarginfee = new Array();
    //存储费用 storagefee
    var storagefee = new Array();
    //交割费用
    var deliverfee = new Array();
    //增值税费用
    var vatfee = new Array();
    //db (default user)
    function db_f(commodityid,lendrate,tradecharge,trademargingap)
    {
        this.commodityid=commodityid;
        this.lendrate=lendrate;
        this.tradecharge=tradecharge;
        this.trademargingap=trademargingap;
    }
    var db=new Array();
    var db_num=<%= @db_num%>;
    <% for i in 0..@db_num-1 do%>
    if(userflag==0)
    db[<%=i%>]=new db_f('<%= @defaultdb[i].commodityid%>',<%= @defaultdb[i].lendrate%>,<%= @defaultdb[i].tradecharge%>,<%= @defaultdb[i].trademargingap%>);
    else
    db[<%=i%>]=new db_f('<%= @userdb[i].commodityid%>',<%= @userdb[i].lendrate%>,<%= @defaultdb[i].tradecharge%>,<%= @userdb[i].trademargingap%>);
    <% end%>
    //flag
    var userflag=<%=@userflag%>;
    //定制服务初始化
    if(userflag!=0)
    {
    var tradechargechange_num=<%= @tradechargechange_num %>;
    <% for i in 0..@tradechargechange_num-1 do%>
        userchange[<%=i%>]=new userchange_f('<%= @userchange[i].commodityid%>',<%= @userchange[i].tradecharge%>);
    <% end%>
         //the new table var
       }
    //MKDataState
	function MKDataState(mtcounter, isgetMKData){ 
	  this.mtcounter = mtcounter; 
	  this.isgetMKData = isgetMKData; 
	}	 
    //formatted-num
    jQuery.fn.dataTableExt.oSort['formatted-num-asc'] = function(a,b) {
    /* Remove any formatting */
        var x = a.match(/\d/) ? a.replace( /[^\d\-\.]/g, "" ) : 0;
        var y = b.match(/\d/) ? b.replace( /[^\d\-\.]/g, "" ) : 0;
        /* Parse and return */
        return parseFloat(x) - parseFloat(y);
    };
    jQuery.fn.dataTableExt.oSort['formatted-num-desc'] = function(a,b) {
        var x = a.match(/\d/) ? a.replace( /[^\d\-\.]/g, "" ) : 0;
        var y = b.match(/\d/) ? b.replace( /[^\d\-\.]/g, "" ) : 0;
        return parseFloat(y) - parseFloat(x);
    };

    $.ajaxSetup({
        async: false,
        cache: false
    });
    //getxml
    function getxml()
    {
        var xml_elements;
        $.get(document.location.href.substring(0,document.location.href.indexOf(window.document.location.pathname))+"/assets/CSpreadCostPairs.xml",
                function(data){
                    xml_arr=xml2array(data);
                        getAjax();
        });
    }
    //getAjax
     function getAjax()
     {
         $.get(document.location.href.substring(0,document.location.href.indexOf(window.document.location.pathname))+"/assets/CSpreadCostStrRunOnTime.xml",
                 function(data){
                     rtxml_arr=xml2array(data);
                     var elements=data.getElementsByTagName("pair");
						 if(elements.length!=0){
                             //original
							 for (var i = 0; i < elements.length; i++) {
                         function db_c(q)
                                         {
                             vatfee[i]=(parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])-parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice']))*parseFloat(xml_arr['pairsattr']['pair'][i]['tradeunit'])
                                     *parseFloat(xml_arr['pairsattr']['pair'][i]['vatrate'])/(1+parseFloat(xml_arr['pairsattr']['pair'][i]['vatrate']));
                                             //交割费用
                             deliverfee[i]=parseFloat(xml_arr['pairsattr']['pair'][i]['deliverchargebyhand'])*2;
                                             //存储费用
                             storagefee[i]=parseFloat(xml_arr['pairsattr']['pair'][i]['storagedailyfee'])*(parseFloat(xml_arr['pairsattr']['pair'][i]['D2'])-parseFloat(xml_arr['pairsattr']['pair'][i]['D1']))
                                             //交易费用
                             computetransfee[i]=db[q].tradecharge*2;
                                             //总资金
                             funds[i]=(parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])+(parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])*(parseFloat(xml_arr['pairsattr']['pair'][i]['secondmarginrate'])+db[q].trademargingap)))*parseFloat(xml_arr['pairsattr']['pair'][i]['tradeunit']);
                                             //交易保证金占用成本
                             if(parseFloat(xml_arr['pairsattr']['pair'][i]['issinglemargin'])==1)
                                             {
                                 trademarginfee[i]=parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])
                                         *parseFloat(xml_arr['pairsattr']['pair'][i]['tradeunit'])*(parseFloat(xml_arr['pairsattr']['pair'][i]['firstmarginrate'])+db[q].trademargingap)*db[q].lendrate*parseFloat(xml_arr['pairsattr']['pair'][i]['D1'])/365
                                         +parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])
                                         *parseFloat(xml_arr['pairsattr']['pair'][i]['tradeunit'])*(parseFloat(xml_arr['pairsattr']['pair'][i]['firstmarginrate'])+db[q].trademargingap)*db[q].lendrate*(parseFloat(xml_arr['pairsattr']['pair'][i]['D2'])-parseFloat(xml_arr['pairsattr']['pair'][i]['D1']))/365
                                             }
                                 else
                                 {
                                     trademarginfee[i]=(parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])
                                             *parseFloat(xml_arr['pairsattr']['pair'][i]['tradeunit'])*(parseFloat(xml_arr['pairsattr']['pair'][i]['firstmarginrate'])+db[q].trademargingap)+parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])
                                             *parseFloat(xml_arr['pairsattr']['pair'][i]['tradeunit'])*(parseFloat(xml_arr['pairsattr']['pair'][i]['secondmarginrate'])+db[q].trademargingap))*db[q].lendrate*parseFloat(xml_arr['pairsattr']['pair'][i]['D1'])/365
                                             +parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])
                                             *parseFloat(xml_arr['pairsattr']['pair'][i]['tradeunit'])*(parseFloat(xml_arr['pairsattr']['pair'][i]['secondmarginrate'])+db[q].trademargingap)*db[q].lendrate*(parseFloat(xml_arr['pairsattr']['pair'][i]['D2'])-parseFloat(xml_arr['pairsattr']['pair'][i]['D1']))/365
                                             }
                                             //默认交割保证金占用成本
                             delivermarginfee[i]=parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])
                                     *parseFloat(xml_arr['pairsattr']['pair'][i]['tradeunit'])*db[q].lendrate*(parseFloat(xml_arr['pairsattr']['pair'][i]['D2'])-parseFloat(xml_arr['pairsattr']['pair'][i]['D1']))/365;
                                         }
                          //默认用户
                          if(userflag==0)
                                     {
                              //默认所有计算
                              for(var q=0;q<db_num-1;q++)
                              {
                                  if(rtxml_arr['pairstrade']['pair'][i]['name'].substr(0,2)==db[q].commodityid)
                                  {
                                      db_c(q);
                                             break;
                                         }
                                         //内容同上
                                  else if(rtxml_arr['pairstrade']['pair'][i]['name'].substr(0,1)==db[q].commodityid)
                                         {
                                      db_c(q);
                                             break;
                                         }
                                 }
                                 }
                                 //用户
                                 else
                                 {
                                     //所有计算
                              var db_tradecharge_flag;
                              for(var q=0;q<db_num-1;q++)
                                     {
                                  if(rtxml_arr['pairstrade']['pair'][i]['name'].substr(0,2)==db[q].commodityid)
                                         {
                                      db_c(q);
                                      db_tradecharge_flag=q;
                                             break;
                                         }
                                         //内容同上
                                  else if(rtxml_arr['pairstrade']['pair'][i]['name'].substr(0,1)==db[q].commodityid)
                                         {
                                      db_c(q);
                                      db_tradecharge_flag=q;
                                             break;
                                         }
                                     }
                                     //交易费用修改（user）
                                     for(var p=0;p<tradechargechange_num;p++)
                                     {
                                  if(rtxml_arr['pairstrade']['pair'][i]['name'].substr(0,2)==userchange[p].commodityid)
                                         {
                                      computetransfee[i]=userchange[p].tradecharge*2;
                                             break;
                                         }
                                  else if(rtxml_arr['pairstrade']['pair'][i]['name'].substr(0,1)==userchange[p].commodityid)
                                         {
                                      computetransfee[i]=userchange[p].tradecharge*2;
                                             break;
                                         }
                                         else
                                      computetransfee[i]=db[db_tradecharge_flag].tradecharge*2;
                                     }
                                 }
                         computearbfee[i] = storagefee[i]+deliverfee[i]+trademarginfee[i]+delivermarginfee[i]+vatfee[i]+computetransfee[i];
                                 //年化收益率计算
                         computerateofreturn[i]=((parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])-parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice']))
                                 *parseFloat(xml_arr['pairsattr']['pair'][i]['tradeunit'])-computearbfee[i])*365/(funds[i]*parseFloat(xml_arr['pairsattr']['pair'][i]['D2']))
                         if(parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])&&parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])>0)
                         {
                             tabledata[i]=[rtxml_arr['pairstrade']['pair'][i]['name'],
                                 rtxml_arr['pairstrade']['pair'][i]['firstprice'],
                                 rtxml_arr['pairstrade']['pair'][i]['secondprice'],
                                 (parseFloat(rtxml_arr['pairstrade']['pair'][i]['secondprice'])-parseFloat(rtxml_arr['pairstrade']['pair'][i]['firstprice'])),
                                        parseFloat(computearbfee[i]).toFixed(1),
                                        (computerateofreturn[i]*100).toFixed(1),
                                 rtxml_arr['pairstrade']['pair'][i]['time']];
								}
                         else
                         {
                             tabledata[i]=[rtxml_arr['pairstrade']['pair'][i]['name'],"--","--","--","--","--","--"]
								}
							}
                                 $('#rtpricetable').html('<table cellpadding="0" cellspacing="0" border="0" class="display" id="default"></table>');
                                 $('#default').dataTable( {
                                         "aaData": tabledata,
                                         "aaSorting": [[5,"desc"]],
                                         "bPaginate": false,
                                        "aoColumns": [
                                             { "sTitle": "套利合约对名", "sClass": "center" },
                                             { "sTitle": "近月合约价格", "sClass": "center" },
                                             { "sTitle": "远月合约价格", "sClass": "center" },
                                             { "sTitle": "最新价差", "sClass": "center" },
                                             { "sTitle": "持仓成本", "sClass": "center" },
                                      { "sTitle": "年化收益率", "sType": "formatted-num","sClass": "center","fnRender":function(obj)
                                      {
                                                         var sReturn = obj.aData[ obj.iDataColumn ];
                                                         if ( sReturn >=0 )
                                                         {
                                                             sReturn = "<font color='red'>"+sReturn+"%</font>";
                                                         }
                                                         else
                                                             sReturn = "<font color='green'>"+sReturn+"%</font>";
                                                           return sReturn;
							}
                                             },
                                             { "sTitle": "更新时间", "sClass": "center" }
                                         ] ,
                                 "bFilter": false,//"bRetrieve":true
                                     "bStateSave": true
                                     } );

						};
                     setTimeout(refreshMKData,2000);} )
						}
	function refreshMKData()
	{
		if (g_MKDataState.isgetMKData)
		{
		   getAjax();
		}	 	
	}
	function getservertime(){
        var st_a;
        $.ajaxSetup({
              async: false,
			  cache: false
              });
        $.getJSON("shownorisk",{gettime:"gettime"},callback)
          function callback(data,status)
          {
              var str=data.substr(0,10)+" "+data.substr(11,8);
        var st=new Date(str.replace(/-/g, "\/"));
             st_a=st
          }
		return st_a;
	}
	function checktimeMKTime(){
		var servertime=getservertime();
		var endtime=new Date(servertime);
		if ((servertime.getDay()!=0)&&(servertime.getDay()!=6))
		{
		    if(servertime.getHours()<9){
				endtime.setHours(9);
				endtime.setMinutes(0);
				endtime.setSeconds(5);
                g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
                g_MKDataState.isgetMKData=false;
                setTimeout(checktimeMKTime,g_MKDataState.mtcounter);			
			}
			else if((servertime.getHours()<15)&&(servertime.getHours()>=9)){
				endtime.setHours(15);
				endtime.setMinutes(2);
				endtime.setSeconds(0);
                g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
                //if(servertime.getHours()==9&&servertime.getMinutes()==0&&servertime.getSeconds()<10)
                //getxml();
                g_MKDataState.isgetMKData=true;
                setTimeout(checktimeMKTime,g_MKDataState.mtcounter);	
			}else{
				endtime.setDate(servertime.getDate()+1); 
				endtime.setHours(9);
				endtime.setMinutes(0);
				endtime.setSeconds(5);	
                g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
                g_MKDataState.isgetMKData=false;
                setTimeout(checktimeMKTime,g_MKDataState.mtcounter);				
			}
		}else{
			endtime.setDate(servertime.getDate()+1); 
			endtime.setHours(9);
			endtime.setMinutes(0);
			endtime.setSeconds(5);	
			g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
			g_MKDataState.isgetMKData=false;
			setTimeout(checktimeMKTime,g_MKDataState.mtcounter);			
		}		
	}
    getxml();
	var g_MKDataState=new MKDataState(3600000,true);
	checktimeMKTime();
</script>
