<%= javascript_include_tag "prototype.js" %>
<%= javascript_include_tag "jquery.min.js" %>
<%= javascript_include_tag "jquery.qtip.min.js" %>
<%= stylesheet_link_tag "jquery.qtip.min.css" %>




<!-- JS代码 -->
<script language="Javascript">
    var click_name=new Array();
    var click_firstprice=new Array();
    var click_secondprice=new Array();
    var click_disprice=new Array();
    var click_computearbfee=new Array();
    var click_returnrate=new Array();
    var click_time=new Array();
    function  myclick(s)
    {
        //$.post("showclick", { myclick: s } );
        alert("套利合约对名："+click_name[s]+". 近月合约价格："+click_firstprice[s]
                +" .远月合约价格："+click_secondprice[s]+" .最新价差："+click_disprice[s]
                +" .持仓成本："+click_computearbfee[s]+" .年化收益率："+click_returnrate[s]+" .更新时间："+click_time[s])

    }
    var stg010001_username = new Array();
    var stg010001_pairname = new Array();
    var stg010001_time = new Array();
    var stg010001_returnrate = new Array();
    var myDate = new Array();
    <% for i in 0..@stg010001.size-1 do%>
        stg010001_username[<%=i%>]='<%= @stg010001[i].username%>';
        stg010001_pairname[<%=i%>]='<%= @stg010001[i].pairname%>';
        stg010001_time[<%=i%>]='<%= @stg010001[i].time.strftime("%Y年%m月%d日 %H时%M分%S秒")%>';
        stg010001_returnrate[<%=i%>]='<%= @stg010001[i].returnrate%>';
    <% end%>
    Date.prototype.format = function(format)
        {
            var o = {
            "M+" : this.getMonth()+1, //month
            "d+" : this.getDate(),    //day
            "h+" : this.getHours(),   //hour
            "m+" : this.getMinutes(), //minute
            "s+" : this.getSeconds(), //second
            "q+" : Math.floor((this.getMonth()+3)/3),  //quarter
            "S" : this.getMilliseconds() //millisecond
            }
            if(/(y+)/.test(format)) format=format.replace(RegExp.$1,
            (this.getFullYear()+"").substr(4 - RegExp.$1.length));
            for(var k in o)if(new RegExp("("+ k +")").test(format))
            format = format.replace(RegExp.$1,
            RegExp.$1.length==1 ? o[k] :
            ("00"+ o[k]).substr((""+ o[k]).length));
            return format;
        }

    //交易费用修改
    var computearbfee = new Array();
    var computetransfee = new Array();
    var userchange_commodityid = new Array();
    var userchange_tradecharge = new Array();

    //实际年化收益率
    var computerateofreturn = new Array();
    var funds = new Array();//总资金
    //交割保证金占用成本 delivermarginfee
    var delivermarginfee = new Array();
    var xml_tradeunit = new Array();
    var xml_storageday = new Array();
    //交易保证金占用成本 trademarginfee
    var trademarginfee = new Array();
    var xml_issinglemargin = new Array();
    var xml_firstmarginrate = new Array();
    var xml_secondmarginrate = new Array();
    var xml_D1 = new Array();
    var xml_D2 = new Array();
    //存储费用 storagefee
    var storagefee = new Array();
    var xml_storagedailyfee = new Array();
    //交割费用
    var deliverfee = new Array();
    var xml_deliverchargebyhand = new Array();
    //增值税费用
    var vatfee = new Array();
    var xml_vatrate = new Array();
    //db data
    var userdb_lendrate = new Array();
    var userdb_commodityid = new Array();
    var userdb_trademargingap = new Array();
    var defaultdb_tradecharge = new Array();
    var defaultdb_lendrate = new Array();
    var defaultdb_commodityid = new Array();
    var defaultdb_trademargingap = new Array();
    //default初始化
    var defaultdb_num=<%= @defaultdb_num%>

<% for i in 0..@defaultdb_num-1 do%>
            defaultdb_commodityid[<%=i%>]='<%= @defaultdb_commodityid[i]%>';
<% end%>
    defaultdb_lendrate=<%= @defaultdb_lendrate%>
    defaultdb_tradecharge=<%= @defaultdb_tradecharge%>
    defaultdb_trademargingap=<%= @defaultdb_trademargingap%>

    //flag
    var userflag=<%=@userflag%>;

    //定制服务初始化
    if(userflag!=0)
    {
        var tradechargechange_num=<%= @tradechargechange_num %>+1;
    <% for i in 0..@tradechargechange_num do%>
            userchange_commodityid[<%=i%>]='<%= @userchange_commodityid[i]%>';
    <% end%>
    //对象转化为数组
    userchange_tradecharge=<%= @userchange_tradecharge%>
     //字符串对象额外操作
        var userdb_num=<%= @userdb_num%>
        <% for i in 0..@userdb_num-1 do%>
                userdb_commodityid[<%=i%>]='<%= @userdb_commodityid[i]%>';
    <% end%>
        userdb_lendrate=<%= @userdb_lendrate%>
        userdb_trademargingap=<%= @userdb_trademargingap%>

         //the new table var
       }
    <% if @webuser!=nil&&@strategyparam!=nil%>
    var userrateofreturn = <%= @strategyparam.paramvalue%>
    var userrateofreturn_first = new Array();
    var userrateofreturn_first_flag = new Array(20);
    for(var i=0;i<userrateofreturn_first_flag.length-1;i++)
    {
        userrateofreturn_first_flag[i]=0
    }
    <% end %>
     function loadXML(xmlString){
         var xmlDoc=null;
         if(!window.DOMParser && window.ActiveXObject){
             var xmlDomVersions = ['MSXML.2.DOMDocument.6.0','MSXML.2.DOMDocument.3.0','Microsoft.XMLDOM'];
             for(var i=0;i<xmlDomVersions.length;i++){
                 try{
                     xmlDoc = new ActiveXObject(xmlDomVersions[i]);
                     xmlDoc.async = false;
                     xmlDoc.loadXML(xmlString);
                     break;
                 }catch(e){
                 }
             }
         }
         else if(window.DOMParser && document.implementation && document.implementation.createDocument){
             try{
                 domParser = new  DOMParser();
                 xmlDoc = domParser.parseFromString(xmlString, 'text/xml');
             }catch(e){
             }
         }
         else{
             return null;
         }
         return xmlDoc;
     }

    function createxmlhttp()
     {
          xmlhttpobj = false;
          try{
			  xmlhttpobj=new ActiveXObject();
          }catch(e){
              try{
                  xmlhttpobj=new ActiveXObject("MSXML2.XMLHTTP");
              }catch(e2){
                  try{
                      xmlhttpobj=new ActiveXObject("Microsoft.XMLHTTP");
                      }catch(e3){
                      xmlhttpobj = false;
                  }
              }
          }
		  if((!xmlhttpobj)&&(window.XMLHttpRequest))
		  {
			 xmlhttpobj=new XMLHttpRequest();
		  }

          return xmlhttpobj;
     }

	function sortby(first, second){
	    if(first.value>second.value){
		   return -1;
		}else{
		   return 1;
		}
	 }
	function returnrate(id, value){ 
	  this.id = id; 
	  this.value = value; 
	}
	function MKDataState(mtcounter, isgetMKData){ 
	  this.mtcounter = mtcounter; 
	  this.isgetMKData = isgetMKData; 
	}	 

    function getxml()
    {
        var xmlhttpobj_xml = createxmlhttp();
        if(xmlhttpobj_xml){
            url = document.location.href.substring(0,document.location.href.indexOf(window.document.location.pathname))+"/assets/CSpreadCostPairs.xml";
		 xmlhttpobj_xml.open("get",url,true);
		 xmlhttpobj_xml.setRequestHeader("Cache-Control","no-cache");
		 xmlhttpobj_xml.setRequestHeader("If-Modified-Since","0");
		 xmlhttpobj_xml.setRequestHeader("Content-Type","application/x-www-form-urlencoded;charset=utf-8");
            xmlhttpobj_xml.send(null);
            xmlhttpobj_xml.onreadystatechange=function(){
                if(xmlhttpobj_xml.readyState==4){
                    if(xmlhttpobj_xml.status==200){
                        var htmlxxx = xmlhttpobj_xml.responseText;
                        var xmldoc=loadXML(htmlxxx);
					 var elements = xmldoc.getElementsByTagName("pair");
					 if(elements.length!=0){
                         for (var i = 0; i < elements.length; i++)
                         {
                             //交割保证金占用成本 delivermarginfee
                             xml_tradeunit[i]=parseFloat(elements[i].getElementsByTagName("tradeunit")[0].firstChild.nodeValue);
                             xml_storageday[i]=parseFloat(elements[i].getElementsByTagName("D2")[0].firstChild.nodeValue)-parseFloat(elements[i].getElementsByTagName("D1")[0].firstChild.nodeValue);
                             //交易保证金占用成本
                             xml_issinglemargin[i]=parseFloat(elements[i].getElementsByTagName("issinglemargin")[0].firstChild.nodeValue);
                             xml_firstmarginrate[i]=parseFloat(elements[i].getElementsByTagName("firstmarginrate")[0].firstChild.nodeValue);
                             xml_secondmarginrate[i]=parseFloat(elements[i].getElementsByTagName("secondmarginrate")[0].firstChild.nodeValue);
                             xml_D1[i]=parseFloat(elements[i].getElementsByTagName("D1")[0].firstChild.nodeValue);
                             xml_D2[i]=parseFloat(elements[i].getElementsByTagName("D2")[0].firstChild.nodeValue);
                             xml_storagedailyfee[i]=parseFloat(elements[i].getElementsByTagName("storagedailyfee")[0].firstChild.nodeValue);
                             xml_deliverchargebyhand[i]=parseFloat(elements[i].getElementsByTagName("deliverchargebyhand")[0].firstChild.nodeValue);
                             xml_vatrate[i]=parseFloat(elements[i].getElementsByTagName("vatrate")[0].firstChild.nodeValue);
                         }
                     }
                     }
                }
            }
        }
    }
    getxml();
     function getAjax()
     {
         var xmlhttpobj = createxmlhttp();
         if(xmlhttpobj){
             url = document.location.href.substring(0,document.location.href.indexOf(window.document.location.pathname))+"/assets/CSpreadCostStrRunOnTime.xml";
			 xmlhttpobj.open("get",url,true);
			 xmlhttpobj.setRequestHeader("Cache-Control","no-cache");
			 xmlhttpobj.setRequestHeader("If-Modified-Since","0");
			 xmlhttpobj.setRequestHeader("Content-Type","application/x-www-form-urlencoded;charset=utf-8");  
             xmlhttpobj.send(null);			 
             xmlhttpobj.onreadystatechange=function(){
                 if(xmlhttpobj.readyState==4){
                     if(xmlhttpobj.status==200){
                         var htmlxxx = xmlhttpobj.responseText;
                         var xmldoc=loadXML(htmlxxx);
						 var elements = xmldoc.getElementsByTagName("pair");

						 if(elements.length!=0){

                             //original
							 var tbs = '<table class="rttableformat">';
							 var tbttl = '<tr><th>套利合约对名</th><th>近月合约价格</th><th>远月合约价格</th><th><a title="最新价差 是远月合约价格减去近月合约价格">最新价差</a></th><th><a title="持仓成本 是您做这笔套利对交易所需要付出的成本金额。持仓成本 = 存储费用 + 交割费用 + 交易费用 + 保证金占用费用 + 交割保证金占有费用 + 增值税费用">持仓成本</a></th><th>年化收益率</th><th>更新时间</th></tr>';
                             tbs += tbttl;
							 var tbstrarray = new Array();		
							 var returnratearray = new Array();

							 for (var i = 0; i < elements.length; i++) {
                                 //默认用户

                                 if(userflag==0)
                                 {
                                     //默认所有计算
                                     for(var q=0;q<defaultdb_num-1;q++)
                                     {
                                         function default_s()
                                         {
                                             vatfee[i]=(parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue)
                                                     -parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue))*xml_tradeunit[i]
                                                     *xml_vatrate[i]/(1+xml_vatrate[i])
                                             //交割费用
                                             deliverfee[i]=xml_deliverchargebyhand[i]*2
                                             //存储费用
                                             storagefee[i]=xml_storagedailyfee[i]*2
                                             //交易费用
                                             computetransfee[i]=defaultdb_tradecharge[q]*2;
                                             //总资金
                                             funds[i]=(parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue)
                                             +parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue
                                                     *(xml_secondmarginrate[i]+defaultdb_trademargingap[q])))*xml_tradeunit[i]
                                             //交易保证金占用成本
                                             if(xml_issinglemargin[i]==1)
                                             {
                                                 trademarginfee[i]=parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue)
                                                         *xml_tradeunit[i]*(xml_firstmarginrate[i]+defaultdb_trademargingap[q])*defaultdb_lendrate[q]*xml_D1[i]/365
                                                         +parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue)
                                                         *xml_tradeunit[i]*(xml_secondmarginrate[i]+defaultdb_trademargingap[q])*defaultdb_lendrate[q]*xml_storageday[i]/365
                                             }
                                 else
                                 {
                                                 trademarginfee[i]=(parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue)
                                                         *xml_tradeunit[i]*(xml_firstmarginrate[i]+defaultdb_trademargingap[q])+parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue)
                                                         *xml_tradeunit[i]*(xml_secondmarginrate[i]+defaultdb_trademargingap[q]))*defaultdb_lendrate[q]*xml_D1[i]/365
                                                         +parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue)
                                                         *xml_tradeunit[i]*(xml_secondmarginrate[i]+defaultdb_trademargingap[q])*defaultdb_lendrate[q]*xml_storageday[i]/365
                                             }

                                             //默认交割保证金占用成本
                                             delivermarginfee[i]=parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue)
                                                     *xml_tradeunit[i]*defaultdb_lendrate[q]*xml_storageday[i]/365;
                                         }

                                         if(elements[i].getElementsByTagName("name")[0].firstChild.nodeValue.substr(0,2)==defaultdb_commodityid[q])
                                     {
                                             default_s();
                                             break;

                                         }
                                         //内容同上
                                         else if(elements[i].getElementsByTagName("name")[0].firstChild.nodeValue.substr(0,1)==defaultdb_commodityid[q])
                                         {
                                             default_s();
                                             break;
                                         }
                                 }
                                 }
                                 //用户
                                 else
                                 {
                                     //所有计算
                                     for(var q=0;q<userdb_num-1;q++)
                                     {
                                         function user()
                                         {
                                             vatfee[i]=(parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue)
                                                 -parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue))*xml_tradeunit[i]
                                                 *xml_vatrate[i]/(1+xml_vatrate[i])
                                             //交割费用
                                             deliverfee[i]=xml_deliverchargebyhand[i]*2
                                             //存储费用
                                             storagefee[i]=xml_storagedailyfee[i]*2
                                             //总资金
                                             funds[i]=(parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue)
                                             +parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue
                                                     *(xml_secondmarginrate[i]+userdb_trademargingap[q])))*xml_tradeunit[i]
                                             //交易保证金占用成本
                                             if(xml_issinglemargin[i]==1)
                                             {
                                                 trademarginfee[i]=parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue)
                                                         *xml_tradeunit[i]*(xml_firstmarginrate[i]+userdb_trademargingap[q])*userdb_lendrate[q]*xml_D1[i]/365
                                                     +parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue)
                                                     *xml_tradeunit[i]*(xml_secondmarginrate[i]+userdb_trademargingap[q])*userdb_lendrate[q]*xml_storageday[i]/365
                                             }
                                             else
                                             {
                                                 trademarginfee[i]=(parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue)
                                                         *xml_tradeunit[i]*(xml_firstmarginrate[i]+userdb_trademargingap[q])+parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue)
                                                 *xml_tradeunit[i]*(xml_secondmarginrate[i]+userdb_trademargingap[q]))*userdb_lendrate[q]*xml_D1[i]/365
                                                     +parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue)
                                                     *xml_tradeunit[i]*(xml_secondmarginrate[i]+userdb_trademargingap[q])*userdb_lendrate[q]*xml_storageday[i]/365
                                             }

                                             //交割保证金占用成本
                                             delivermarginfee[i]=parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue)
                                                          *xml_tradeunit[i]*userdb_lendrate[q]*xml_storageday[i]/365;

                                         }
                                         if(elements[i].getElementsByTagName("name")[0].firstChild.nodeValue.substr(0,2)==userdb_commodityid[q])
                                         {
                                             user();
                                             break;
                                         }
                                         //内容同上
                                         else if(elements[i].getElementsByTagName("name")[0].firstChild.nodeValue.substr(0,1)==userdb_commodityid[q])
                                         {
                                             user();
                                             break;
                                         }
                                     }
                                     //交易费用修改（user）
                                     for(var p=0;p<tradechargechange_num;p++)
                                     {
                                         if(elements[i].getElementsByTagName("name")[0].firstChild.nodeValue.substr(0,2)==userchange_commodityid[p])
                                         {
                                             computetransfee[i]=userchange_tradecharge[p]*2;
                                             break;
                                         }
                                         else if(elements[i].getElementsByTagName("name")[0].firstChild.nodeValue.substr(0,1)==userchange_commodityid[p])
                                         {
                                             computetransfee[i]=userchange_tradecharge[p]*2;
                                             break;
                                         }
                                         else
                                             computetransfee[i]=defaultdb_tradecharge[q]*2;
                                     }
                                 }

								tbstrarray[i]="<tr>";
                                 computearbfee[i] = storagefee[i]
                                         +deliverfee[i]
                                         +trademarginfee[i]
                                         +delivermarginfee[i]
                                         +vatfee[i]
                                         +computetransfee[i];
                                 //年化收益率计算
                                 computerateofreturn[i]=((parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue)-parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue))
                                     *xml_tradeunit[i]-computearbfee[i])*365/(funds[i]*xml_D2[i])
							tbstrarray[i]+= "<td>"
									 + elements[i].getElementsByTagName("name")[0].firstChild.nodeValue + "</a></td>";
								if((elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue>0)
									&&(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue>0)){
									 tbstrarray[i]+= "<td>"
										 + elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue + "</td>";
									 tbstrarray[i]+= "<td>"
										 + elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue + "</td>";
									 tbstrarray[i]+= "<td>"
										 + (parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue)-parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue)) + "</td>";

                                        tbstrarray[i]+= "<td>"+ parseFloat(computearbfee[i]).toFixed(1)
                                                + "</td>";

									 tbstrarray[i]+= "<td>"
										 + (computerateofreturn[i]*100).toFixed(1) + "% </td>";
								     returnratearray[i]=new returnrate(i,computerateofreturn[i]);
								}
								else{
									 tbstrarray[i]+= "<td> -- </td>";
									 tbstrarray[i]+= "<td> -- </td>";
									 tbstrarray[i]+= "<td> -- </td>";
									 tbstrarray[i]+= "<td> -- </td>";
									 tbstrarray[i]+= "<td> -- </td>";
									 returnratearray[i]=new returnrate(i,-10000);										 
								}
								 tbstrarray[i]+= "<td>"
									 + elements[i].getElementsByTagName("time")[0].firstChild.nodeValue + "</td>";
								 tbstrarray[i]+= "</tr>";
							}
							returnratearray.sort(sortby);
							for (var i = 0; i < elements.length; i++){
							    tbs+=tbstrarray[returnratearray[i].id];
							}
							tbs+='</table>\n';
							document.getElementById("rtpricetable").innerHTML=tbs;

                             //user table
                             if(userflag!=0)
                             {
                             //user table
                             var tbs_user = '<table class="rttableformat">';
                             var tbttl_user = '<tr><th>合约号</th><th>下单年化收益率</th><th>下单时间</th><th>最新年化收益率</th><th>操作</th></tr>';
                             tbs_user += tbttl_user;
                             for (var i = 0; i < elements.length; i++)
                             {
                                 // db set
                                 if(computerateofreturn[i]>userrateofreturn && userrateofreturn_first_flag[i]==0)
                                 {
                                     var datatime=new Date()
                                     myDate[i]=datatime.format("yyyy年MM月dd日 hh时mm分ss秒");
                                     userrateofreturn_first[i]=computerateofreturn[i];
                                     userrateofreturn_first_flag[i]=1;

                                     if(stg010001_pairname=='')
                                         $.post("shownorisk", { pairname: elements[i].getElementsByTagName("name")[0].firstChild.nodeValue, returnrate: userrateofreturn_first[i] } );
                                     else
                                     {
                                     var flag_db=0
                                     for(var j=0;j<stg010001_pairname.length;j++)
                                         {
                                           if(stg010001_pairname[j]==elements[i].getElementsByTagName("name")[0].firstChild.nodeValue)
                                             flag_db=flag_db+1
                                         }
                                         if(flag_db==0)
                                         {
                                             $.post("shownorisk", { pairname: elements[i].getElementsByTagName("name")[0].firstChild.nodeValue, returnrate: userrateofreturn_first[i] } );
                                         }
                                     }
                                  }
                             }
                             //show set
                             if(stg010001_username=='')
                             {
                             for (var i = 0; i < elements.length; i++) {
                                 if(computerateofreturn[i]>userrateofreturn|| userrateofreturn_first[i]>userrateofreturn)
                                 {
                                     tbs_user += '<tr><td>'+elements[i].getElementsByTagName("name")[0].firstChild.nodeValue+'</td>'
                                             +'<td>'+(userrateofreturn_first[i]*100).toFixed(1)+'%</td><td>'+myDate[i]+'</td>'
                                             +'<td>'+(computerateofreturn[i]*100).toFixed(1) +'%</td>'+'<td><a href="/strategy/showclick">'+"查看"+'</a></td></tr>'
                                 }
                             }
                             }

                             else//not empty
                             {
                                 var displayed = new Array();
                                 var displaynum=0;
                                 for (var j = 0; j <stg010001_pairname.length; j++)
                                 {
                                     for (var i = 0; i < elements.length; i++)
                                     {
                                         if(elements[i].getElementsByTagName("name")[0].firstChild.nodeValue==stg010001_pairname[j])
                                         {
                                             displayed[displaynum]=stg010001_pairname[j];
                                             click_name[j]=elements[i].getElementsByTagName("name")[0].firstChild.nodeValue;
                                             click_firstprice[j]=elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue;
                                             click_secondprice[j]=elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue;
                                             click_disprice[j]=parseFloat(elements[i].getElementsByTagName("secondprice")[0].firstChild.nodeValue)-parseFloat(elements[i].getElementsByTagName("firstprice")[0].firstChild.nodeValue);
                                             click_computearbfee[j]=parseFloat(computearbfee[i]).toFixed(1)
                                             click_returnrate[j]=(computerateofreturn[i]*100).toFixed(1)
                                             click_time[j]=elements[i].getElementsByTagName("time")[0].firstChild.nodeValue
                                             tbs_user += '<tr><td>'+displayed[displaynum]+'</td>'
                                                     +'<td>'+(stg010001_returnrate[j]*100).toFixed(1)+'%</td><td>'+stg010001_time[j]+'</td>'
                                                     +'<td>'+(computerateofreturn[i]*100).toFixed(1) +'%</td>'+'<td><a href="#" onclick="myclick('+j+')">查看</a></td></tr>'
                                             displaynum=displaynum+1;
                                         }
                                     }
                                 }
                                 //rebuild
                                 for (var i = 0; i < elements.length; i++) {
                                     var displayflag=0;
                                     if(computerateofreturn[i]>userrateofreturn|| userrateofreturn_first[i]>userrateofreturn)
                                     {
                                         for(var s=0;s<displaynum;s++)
                                         {
                                             if(displayed[s]==elements[i].getElementsByTagName("name")[0].firstChild.nodeValue)
                                             {
                                                 displayflag=displayflag+1;
                                             }
                                         }
                                         if(displayflag==0)
                                         {
                                         tbs_user += '<tr><td>'+elements[i].getElementsByTagName("name")[0].firstChild.nodeValue+'</td>'
                                                 +'<td>'+(userrateofreturn_first[i]*100).toFixed(1)+'%</td><td>'+myDate[i]+'</td>'
                                                 +'<td>'+(computerateofreturn[i]*100).toFixed(1) +'%</td>'+'<td><a href="showclick">'+"查看"+'</a></td></tr>'
                                         }
                                     }
                                 }
                             }
                             document.getElementById("rtpricetable_user").innerHTML=tbs_user;
                             }
						}
                     }
                 }
             }
         }
     }

	function refreshMKData()
	{
		if (g_MKDataState.isgetMKData)
		{
		   getAjax();
		}	 	
	}

	function getservertime(){
	    //var xmlhttpobj = createxmlhttp();
		//xmlhttpobj.open("HEAD",location.href,false);  
        //xmlhttpobj.send(null);		
        //var st=new Date(xmlhttpobj.getResponseHeader("Date")); 
        var str=<%= "'"+(Time.now()).inspect+"'" %>;
        var st=new Date(str.replace(/-/g, "\/"));
		return st;   
	}

	function checktimeMKTime(){
		var servertime=getservertime();
		var endtime=new Date(servertime);
		if ((servertime.getDay()!=0)&&(servertime.getDay()!=6))
		{
		    if(servertime.getHours()<9){
				endtime.setHours(9);
				endtime.setMinutes(0);
				endtime.setSeconds(5);
                g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
                g_MKDataState.isgetMKData=false;
                setTimeout(checktimeMKTime,g_MKDataState.mtcounter);			
			}
			else if((servertime.getHours()<15)&&(servertime.getHours()>=9)){
				endtime.setHours(15);
				endtime.setMinutes(2);
				endtime.setSeconds(0);
                g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
                g_MKDataState.isgetMKData=true;
                setTimeout(checktimeMKTime,g_MKDataState.mtcounter);	
			}else{
				endtime.setDate(servertime.getDate()+1); 
				endtime.setHours(9);
				endtime.setMinutes(0);
				endtime.setSeconds(5);	
                g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
                g_MKDataState.isgetMKData=false;
                setTimeout(checktimeMKTime,g_MKDataState.mtcounter);				
			}
		}else{
			endtime.setDate(servertime.getDate()+1); 
			endtime.setHours(9);
			endtime.setMinutes(0);
			endtime.setSeconds(5);	
			g_MKDataState.mtcounter=endtime.getTime()-servertime.getTime();
			g_MKDataState.isgetMKData=false;
			setTimeout(checktimeMKTime,g_MKDataState.mtcounter);			
		}		
	}

	var g_MKDataState=new MKDataState(3600000,true);
	checktimeMKTime();
    var g_period = new PeriodicalExecuter(refreshMKData,2.0);
	getAjax();

/*
// Define our positioning and style arrays
  var at = [
          'left bottom'
      ],
      my = [
          'right bottom'
      ],
      styles = [
          'red'
      ];
*/
// Create the tooltips only on document load

//  $(document).ready(function()
//  {
//          $('a[title]').qtip();

//          $('.ironbars')
              /*
               * Lets delete the qTip data from our target element so we can apply multiple tooltips.
               * Since the data is also stored on the tooltip element itself this isn't a problem!
               *
               * Check here for more details on this: http://craigsworks.com/projects/qtip2/tutorials/advanced/#multi
               */
/*
			   .removeData('qtip')
              .qtip({
                  content: {
                      text: '您可以调节品种手续费，享受定制化服务',
                      title: {
                          text: '请点击套利合约对名',
                          button: true
                      }
                  },
                  position: {
                      my: my[0], // Use the corner...
                      at: at[0] // ...and opposite corner
                  },
                  show: {
                      event: false, // Don't specify a show event...
                      ready: true // ... but show the tooltip when ready
                  },
                  hide: false, // Don't specify a hide event either!
                  style: {
                      classes: 'ui-tooltip-shadow ui-tooltip-' + styles[0]
                  }
              });

  });
*/
</script>
	<br />

  <div class="buttonbars">
  <div id = "annualreturnbutton">
  
  <% if @webuser!=nil%>
  <%= button_to "设置期望年化收益率",:controller=>"strategy" ,:action=>"personaltrading", :id=>@webuser.id%>
  <% else %>
  <%= button_to "设置期望年化收益率",:controller=>"sessions" ,:action=>"new",session[:login]=>"userrateofreturn" %>

  <% end %>
  </div>
  </div>

	 <% if @webuser!=nil%>
     <div class="ironbars">
       <div id = "norisktitle">
         <h3>符合您年化收益率的行情记录</h3>
       </div>
     </div>
	<div id="rtpricetable_user">
		</div>
	<% end %>	 
     <div class="ironbars">
       <div id = "norisktitle">
		<br />
	   <h3>策略实时运行中</h3>
       </div>
       <div id = "noriskluntan">
         <a href="#remarks">我想提点意见</a>
       </div>
     </div>
	<div id ="rtpricetable">
	</div>


	<div class ="remarkstitle">
  <a name="remarks">提点意见吧?</a>
  </div>
  <div class = "newremark">
  <iframe src="../noriskmessages/new" frameborder="0" scrolling="no" height="170" width="800" marginheight="0" marginwidth="0"></iframe>
  </div>
  <div class ="remarkslist">
    <h3>所有评论</h3>
<iframe name="iframe_index" src="../noriskmessages" width="800" scrolling="no" height="700" marginheight="10" marginwidth="0" style="border:none"></iframe>
  </div>
